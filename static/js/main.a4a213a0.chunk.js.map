{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","userNames","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","titleIsDeclared","setTitleIsDeclared","userIsSelected","setUserIsSelected","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","userName","onClick","trim","arrId","newTodo","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4a213a0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUser = (userId: number) => {\n  const getUserById = usersFromServer.find(user => userId === user.id);\n\n  return getUserById || null;\n};\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => (\n  {\n    id: todo.id,\n    title: todo.title,\n    completed: todo.completed,\n    user: getUser(todo.userId),\n  }\n));\n\nconst userNames: string[] = usersFromServer.map(user => user.name);\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [titleIsDeclared, setTitleIsDeclared] = useState(true);\n  const [userIsSelected, setUserIsSelected] = useState(true);\n\n  const addTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setTitleIsDeclared(true);\n  };\n\n  const addUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedUser(value);\n    setUserIsSelected(true);\n  };\n\n  const addTodo = () => {\n    if (title.trim() && selectedUser) {\n      const getUserByName = (name: string) => {\n        const findUserByName = usersFromServer.find(\n          user => name === user.name,\n        );\n\n        return findUserByName || null;\n      };\n\n      const arrId = todos.map(todo => todo.id);\n      const newId = Math.max(...arrId) + 1;\n\n      const newTodo: Todo = {\n        id: newId,\n        title,\n        completed: false,\n        user: getUserByName(selectedUser),\n      };\n\n      setTodos([\n        ...todos,\n        newTodo,\n      ]);\n\n      setTitle('');\n      setSelectedUser('');\n    }\n\n    if (!title.trim()) {\n      setTitleIsDeclared(false);\n    }\n\n    if (!selectedUser) {\n      setUserIsSelected(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Add a title\"\n              value={title}\n              onChange={addTitle}\n            />\n          </label>\n          {!titleIsDeclared && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={selectedUser}\n              onChange={addUser}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {userNames.map(userName => (\n                <option\n                  key={userName}\n                  value={userName}\n                >\n                  {userName}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {!userIsSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}